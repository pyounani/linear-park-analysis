import re
import pandas as pd

# 1) 원본 데이터 입력 (단위: 명)
raw = [
    # 종로구
    ("종로1.2.3.4가동", 150000),
    ("혜화동",           90000),
    ("숭인2동",         60000),
    ("창신2동",         50000),
    ("종로5.6가동",     50000),
    ("광희동",         70000),
    ("황학동",         60000),
    ("신당동",         60000),
    ("명동",           60000),
    ("을지로동",       50000),

    # 용산구
    ("청파동",         80000),
    ("한강로동",       60000),
    ("이촌1동",       50000),
    ("원효2동",       50000),
    ("용산2가동",     50000),

    # 성동구
    ("성수2가3동",     60000),
    ("성수1가2동",     60000),
    ("금호2.3가동",    60000),
    ("행당1동",       60000),
    ("왕십리도선동",   60000),

    # 광진구
    ("화양동",        100000),
    ("자양4동",        90000),
    ("자양1동",        90000),
    ("구의1동",        80000),
    ("자양3동",        70000),

    # 동대문구
    ("용신동",        150000),
    ("전농1동",       130000),
    ("제기동",        130000),
    ("이문1동",       100000),
    ("장안1동",       100000),

    # 중랑구
    ("망우본동",      130000),
    ("면목본동",      110000),
    ("묵1동",          80000),
    ("중화2동",        80000),
    ("상봉2동",        80000),

    # 성북구
    ("종암동",        120000),
    ("석관동",        110000),
    ("삼선동",        110000),
    ("월곡1동",        90000),
    ("동선동",         80000),

    # 강북구
    ("송천동",        130000),
    ("숭등동",        130000),
    ("삼양동",        130000),
    ("수유3동",       100000),
    ("인수동",         90000),

    # 도봉구
    ("창2동",        120000),
    ("방학1동",        70000),
    ("쌍문3동",        60000),
    ("쌍문2동",        50000),
    ("쌍문1동",        50000),

    # 노원구
    ("상계2동",       110000),
    ("공릉1동",       110000),
    ("상계3.4동",     100000),
    ("공릉2동",        90000),
    ("상계1동",        80000),

    # 관악구
    ("청룡동",        120000),
    ("신림동",        110000),
    ("은천동",         90000),
    ("조원동",         80000),
    ("신사동",         80000),

    # 은평구
    ("북아현동",      230000),
    ("충현동",        120000),
    ("북가좌2동",     110000),
    ("신촌동",        110000),
    ("연희동",         90000),

    # 마포구
    ("서교동",        190000),
    ("공덕동",        140000),
    ("아현동",         90000),
    ("성산2동",        70000),
    ("망원1동",        70000),

    # 양천구
    ("신정4동",       120000),
    ("신정3동",        80000),
    ("목2동",          70000),
    ("목4동",          60000),
    ("목3동",          50000),

    # 강서구
    ("화곡1동",       180000),
    ("화곡8동",       110000),
    ("화곡본동",       90000),
    ("염창동",         90000),
    ("방화1동",        80000),

    # 구로구
    ("구로2동",       100000),
    ("개봉1동",        80000),
    ("구로5동",        80000),
    ("구로4동",        80000),
    ("구로3동",        80000),

    # 금천구
    ("시흥1동",        60000),
    ("독산1동",        60000),
    ("독산3동",        50000),
    ("가산동",         50000),
    ("독산4동",        40000),

    # 영등포구
    ("영등포동",      110000),
    ("문래동",        100000),
    ("당산2동",        90000),
    ("당산1동",        80000),
    ("대림3동",        70000),

    # 동작구
    ("상도1동",        90000),
    ("대방동",         80000),
    ("사당2동",        80000),
    ("사당1동",        80000),
    ("노량진1동",      70000),

    # 서초구
    ("서초3동",       130000),
    ("양재1동",        90000),
    ("서초1동",        80000),
    ("반포1동",        70000),
    ("서초2동",        70000),

    # 강남구
    ("역삼1동",       220000),
    ("역삼2동",       130000),
    ("논현2동",       130000),
    ("대치4동",       120000),
    ("논현1동",       110000),

    # 송파구
    ("오금동",        110000),
    ("잠실본동",       90000),
    ("가락본동",       90000),
    ("장지동",         80000),
    ("석촌동",         70000),

    # 강동구
    ("길동",          200000),
    ("천호2동",       120000),
    ("천호1동",       120000),
    ("암사1동",       100000),
    ("성내2동",        90000),
]

# 2) “종로1.2.3.4가동”, “종로5.6가동” 등의 묶인 동 분리 로직
records = []
for name, pop in raw:
    m = re.match(r"(\D+)([\d\.]+)(\D+)", name)
    if m and "." in m.group(2):
        prefix, nums, suffix = m.groups()
        for num in nums.split("."):
            records.append({
                "행정동명": f"{prefix}{num}{suffix}",
                "flow_pop": pop
            })
    else:
        records.append({
            "행정동명": name,
            "flow_pop": pop
        })

# 3) DataFrame 생성 및 CSV 저장
df = pd.DataFrame(records)
df.to_csv(
    "final/행정동별_유동인구.csv",
    index=False,
    encoding="utf-8-sig"
)

print("✅ final/행정동별_유동인구.csv 생성 완료")
